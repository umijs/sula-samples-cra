function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

import React from 'react';
import { InfoCircleOutlined } from '@ant-design/icons';
import LocaleReceiver, { t } from '../../localereceiver';

var RowSelection = /*#__PURE__*/function (_React$Component) {
  _inherits(RowSelection, _React$Component);

  var _super = _createSuper(RowSelection);

  function RowSelection() {
    var _this;

    _classCallCheck(this, RowSelection);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.renderRowSelection = function (locale) {
      var ctx = _this.props.ctx;
      var table = ctx.table;
      var selectedRowKeys = table && table.getSelectedRowKeys();

      if (selectedRowKeys && selectedRowKeys.length) {
        return /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement(InfoCircleOutlined, null), /*#__PURE__*/React.createElement("span", {
          style: {
            marginLeft: 8
          }
        }, t(locale.selectedRecords, {
          count: selectedRowKeys.length
        })), /*#__PURE__*/React.createElement("a", {
          style: {
            marginLeft: 8
          },
          onClick: function onClick() {
            table.clearRowSelection();
          }
        }, locale.clearText));
      }

      return null;
    };

    return _this;
  }

  _createClass(RowSelection, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(LocaleReceiver, null, this.renderRowSelection);
    }
  }]);

  return RowSelection;
}(React.Component);

export { RowSelection as default };