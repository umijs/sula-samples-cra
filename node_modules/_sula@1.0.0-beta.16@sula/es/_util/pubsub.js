function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PubSubManager = function PubSubManager() {
  var _this = this;

  _classCallCheck(this, PubSubManager);

  this.subscribes = {};

  this.pub = function (name, payload) {
    var handlers = _this.subscribes[name];

    if (!handlers) {
      return;
    }

    for (var i = 0, len = handlers.length; i < len; i += 1) {
      var handler = handlers[i];
      handler(payload);
    }
  };

  this.sub = function (name, handler) {
    if (!_this.subscribes[name]) {
      _this.subscribes[name] = [];
    }

    _this.subscribes[name].push(handler);

    return function () {
      return _this.unsub(name, handler);
    };
  };

  this.unsub = function (name, handler) {
    if (!_this.subscribes[name]) {
      return;
    }

    var handlerIndex = _this.subscribes[name].indexOf(handler);

    _this.subscribes[name].splice(handlerIndex, 1);
  };
};

var PubSub = new PubSubManager();
export default PubSub;