import isNumber from 'lodash/isNumber';
export function getItemLayout() {
  var itemLayout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var layout = arguments.length > 1 ? arguments[1] : undefined;
  var matchedPonint = arguments.length > 2 ? arguments[2] : undefined;
  var offset = itemLayout.offset,
      gutter = itemLayout.gutter,
      labelCol = itemLayout.labelCol,
      wrapperCol = itemLayout.wrapperCol;
  var finalSpan = getItemSpan(itemLayout, matchedPonint);
  var finalOffset = offset;
  var finalGutter = gutter;
  var finalWrapperCol;
  var finalLabelCol;

  if (layout === 'vertical' || layout === 'horizontal') {
    finalOffset = finalOffset || 0;
    finalGutter = finalGutter || 24; // 只有水平布局需要设置 wrapperCol 和 labelCol

    if (layout === 'horizontal') {
      finalLabelCol = labelCol || {
        span: 8
      };
      finalWrapperCol = wrapperCol || {
        span: finalSpan === 24 ? 12 : 16
      };
    }
  }

  return {
    wrapperCol: finalWrapperCol,
    labelCol: finalLabelCol,
    span: finalSpan,
    offset: finalOffset,
    gutter: finalGutter || 0
  };
}
export function getItemSpan() {
  var itemLayout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var matchedPonint = arguments.length > 1 ? arguments[1] : undefined;
  var fieldItemLayout = arguments.length > 2 ? arguments[2] : undefined;

  if (fieldItemLayout && fieldItemLayout.span) {
    return isNumber(fieldItemLayout.span) ? fieldItemLayout.span : fieldItemLayout.span[matchedPonint];
  }

  var _itemLayout$cols = itemLayout.cols,
      cols = _itemLayout$cols === void 0 ? 1 : _itemLayout$cols,
      span = itemLayout.span;
  var finalSpan;

  if (span) {
    finalSpan = isNumber(span) ? span : span[matchedPonint];
  } else {
    var finalCols = isNumber(cols) ? cols : cols[matchedPonint];
    finalSpan = 24 / finalCols;
  }

  return finalSpan;
}
export function needWrapCols(span) {
  return span !== 24;
}