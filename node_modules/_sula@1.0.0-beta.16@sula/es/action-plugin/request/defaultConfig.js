import "antd/es/notification/style";
import _notification from "antd/es/notification";
import "antd/es/message/style";
import _message from "antd/es/message";
import isUndefined from 'lodash/isUndefined';

// 1. 业务重定向
var bizRedirectHandler = function bizRedirectHandler(response) {
  var data = response.data,
      code = response.code;

  if (Number(code) === 302 && data && data.redirectUrl) {
    window.location.assign(data.redirectUrl);
  }
}; // 2. 开发级错误信息转换


var bizDevErrorAdapter = function bizDevErrorAdapter(response) {
  var code = response.code,
      success = response.success,
      message = response.message,
      description = response.description;
  var opCode = Number(code);

  if (success == false && opCode >= 300 && opCode !== 302) {
    return {
      message: message || "".concat(code),
      description: description || message
    };
  }

  return null;
}; // 3. 用户级错误信息转换


var bizErrorMessageAdapter = function bizErrorMessageAdapter(response) {
  var code = response.code,
      success = response.success,
      message = response.message;
  var opCode = Number(code);

  if (success === false && (opCode < 300 || opCode === 302)) {
    // 错误信息只使用后端提供的
    return message;
  } // 成功


  return null;
}; // 4. 成功信息转换


var bizSuccessMessageAdapter = function bizSuccessMessageAdapter(response, successMessage) {
  var success = response.success,
      message = response.message; // 禁止显示

  if (successMessage === false) {
    return null;
  }

  if (success !== false) {
    // 默认使用后端返回
    if (successMessage === true) {
      return message;
    } else {
      // 前端设置成功提示信息
      return successMessage;
    }
  }

  return null;
}; // 5. 消息通知


var bizNotifyHandler = function bizNotifyHandler(notifyMessages) {
  var successMessage = notifyMessages.successMessage,
      errorMessage = notifyMessages.errorMessage,
      errorDesc = notifyMessages.errorDesc;

  if (successMessage) {
    _message.success(successMessage);
  } else if (errorMessage) {
    _message.error(errorMessage);
  } else if (errorDesc) {
    _notification.error({
      message: errorDesc.message,
      description: errorDesc.description
    });
  }
}; // 6. 业务数据转换


var bizDataAdapter = function bizDataAdapter(response) {
  if (response && !isUndefined(response.data)) {
    return response.data;
  }

  return response;
};

var extendConfig = {
  bizDataAdapter: bizDataAdapter,
  bizDevErrorAdapter: bizDevErrorAdapter,
  bizErrorMessageAdapter: bizErrorMessageAdapter,
  bizSuccessMessageAdapter: bizSuccessMessageAdapter,
  bizNotifyHandler: bizNotifyHandler,
  bizRedirectHandler: bizRedirectHandler
};
export default extendConfig;