function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

import React from 'react';
import assign from 'lodash/assign';
import { Form } from '../form';
import { Table } from '../table';
import QueryFields from './QueryFields';
var defaultProps = {
  formProps: {},
  tableProps: {},
  fields: [],
  columns: [],
  visibleFieldsCount: 5,
  itemLayout: {
    cols: 3
  },
  autoInit: true
};

var QueryTable = /*#__PURE__*/function (_React$Component) {
  _inherits(QueryTable, _React$Component);

  var _super = _createSuper(QueryTable);

  function QueryTable() {
    var _this;

    _classCallCheck(this, QueryTable);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.remoteDataSource = void 0;
    _this.formRef = React.createRef();
    _this.tableRef = React.createRef();

    _this.hasActionsRender = function () {
      var _this$props = _this.props,
          actionsRender = _this$props.actionsRender,
          leftActionsRender = _this$props.leftActionsRender,
          rowSelection = _this$props.rowSelection;
      return rowSelection || actionsRender && actionsRender.length || leftActionsRender && leftActionsRender.length;
    };

    _this.renderForm = function () {
      var _this$props2 = _this.props,
          formProps = _this$props2.formProps,
          layout = _this$props2.layout,
          itemLayout = _this$props2.itemLayout,
          fields = _this$props2.fields,
          initialValues = _this$props2.initialValues,
          visibleFieldsCount = _this$props2.visibleFieldsCount;
      return /*#__PURE__*/React.createElement(Form, _extends({}, formProps, {
        initialValues: initialValues,
        ref: _this.formRef,
        itemLayout: itemLayout,
        layout: layout,
        ctxGetter: function ctxGetter() {
          return {
            table: _this.tableRef.current
          };
        }
      }), /*#__PURE__*/React.createElement(QueryFields, {
        fields: fields,
        visibleFieldsCount: visibleFieldsCount,
        itemLayout: itemLayout,
        layout: layout,
        getFormInstance: function getFormInstance() {
          return _this.formRef.current;
        },
        hasActionsRender: _this.hasActionsRender()
      }));
    };

    _this.renderTable = function () {
      var _this$props3 = _this.props,
          tableProps = _this$props3.tableProps,
          columns = _this$props3.columns,
          actionsRender = _this$props3.actionsRender,
          leftActionsRender = _this$props3.leftActionsRender,
          remoteDataSource = _this$props3.remoteDataSource,
          rowSelection = _this$props3.rowSelection,
          rowKey = _this$props3.rowKey;
      _this.remoteDataSource = assign(remoteDataSource, {
        init: false
      });
      return /*#__PURE__*/React.createElement(Table, _extends({}, tableProps, {
        rowSelection: rowSelection,
        columns: columns,
        actionsRender: actionsRender,
        leftActionsRender: rowSelection ? ['rowselection'] : leftActionsRender,
        remoteDataSource: _this.remoteDataSource,
        rowKey: rowKey,
        ref: _this.tableRef
      }));
    };

    return _this;
  }

  _createClass(QueryTable, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props4 = this.props,
          autoInit = _this$props4.autoInit,
          initialValues = _this$props4.initialValues;

      if (autoInit) {
        this.tableRef.current.refreshTable(null, initialValues, null, true);
      }
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.fields && this.props.fields.length ? this.renderForm() : null, this.renderTable());
    }
  }]);

  return QueryTable;
}(React.Component);

QueryTable.defaultProps = defaultProps;
export { QueryTable as default };