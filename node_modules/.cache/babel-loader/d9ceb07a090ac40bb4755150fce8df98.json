{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/x/workspace/xz8la8/open-sula/sula-samples-cra/src/pages/QueryTableDemo.js\";\nimport React from \"react\";\nimport { QueryTable } from \"sula\";\nconst remoteDataSource = {\n  url: \"https://randomuser.me/api\",\n  method: \"GET\",\n\n  convertParams({\n    params\n  }) {\n    return {\n      results: params.pageSize,\n      ...params\n    };\n  },\n\n  converter({\n    data\n  }) {\n    return {\n      list: data.results.map((item, index) => {\n        return { ...item,\n          id: `${index}`,\n          name: `${item.name.first} ${item.name.last}`\n        };\n      }),\n      total: 100\n    };\n  }\n\n};\nexport default (() => {\n  const config = {\n    remoteDataSource,\n    layout: \"vertical\",\n    fields: [{\n      name: \"name\",\n      label: \"姓名\",\n      field: \"input\"\n    }],\n    columns: [{\n      key: \"id\",\n      title: \"ID\"\n    }, {\n      key: \"name\",\n      title: \"姓名\"\n    }, {\n      key: \"nat\",\n      title: \"国家\"\n    }, {\n      key: \"gender\",\n      title: \"性别\",\n      render: ({\n        text\n      }) => {\n        return text === \"male\" ? \"男\" : \"女\";\n      }\n    }, {\n      key: \"email\",\n      title: \"邮箱\"\n    }],\n    rowKey: \"id\",\n    tableProps: {\n      initialPaging: {\n        pagination: {\n          pageSize: 5\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"rgb(241, 242, 246)\",\n      padding: 16,\n      marginTop: 16\n    },\n    children: /*#__PURE__*/_jsxDEV(QueryTable, { ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n});","map":{"version":3,"sources":["/Users/x/workspace/xz8la8/open-sula/sula-samples-cra/src/pages/QueryTableDemo.js"],"names":["React","QueryTable","remoteDataSource","url","method","convertParams","params","results","pageSize","converter","data","list","map","item","index","id","name","first","last","total","config","layout","fields","label","field","columns","key","title","render","text","rowKey","tableProps","initialPaging","pagination","background","padding","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,GAAG,EAAE,2BADkB;AAEvBC,EAAAA,MAAM,EAAE,KAFe;;AAGvBC,EAAAA,aAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAa;AACxB,WAAO;AACLC,MAAAA,OAAO,EAAED,MAAM,CAACE,QADX;AAEL,SAAGF;AAFE,KAAP;AAID,GARsB;;AASvBG,EAAAA,SAAS,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAW;AAClB,WAAO;AACLC,MAAAA,IAAI,EAAED,IAAI,CAACH,OAAL,CAAaK,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtC,eAAO,EACL,GAAGD,IADE;AAELE,UAAAA,EAAE,EAAG,GAAED,KAAM,EAFR;AAGLE,UAAAA,IAAI,EAAG,GAAEH,IAAI,CAACG,IAAL,CAAUC,KAAM,IAAGJ,IAAI,CAACG,IAAL,CAAUE,IAAK;AAHtC,SAAP;AAKD,OANK,CADD;AAQLC,MAAAA,KAAK,EAAE;AARF,KAAP;AAUD;;AApBsB,CAAzB;AAuBA,gBAAe,MAAM;AACnB,QAAMC,MAAM,GAAG;AACblB,IAAAA,gBADa;AAEbmB,IAAAA,MAAM,EAAE,UAFK;AAGbC,IAAAA,MAAM,EAAE,CACN;AACEN,MAAAA,IAAI,EAAE,MADR;AAEEO,MAAAA,KAAK,EAAE,IAFT;AAGEC,MAAAA,KAAK,EAAE;AAHT,KADM,CAHK;AAUbC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,GAAG,EAAE,IADP;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACED,MAAAA,GAAG,EAAE,MADP;AAEEC,MAAAA,KAAK,EAAE;AAFT,KALO,EASP;AACED,MAAAA,GAAG,EAAE,KADP;AAEEC,MAAAA,KAAK,EAAE;AAFT,KATO,EAaP;AACED,MAAAA,GAAG,EAAE,QADP;AAEEC,MAAAA,KAAK,EAAE,IAFT;AAGEC,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AACpB,eAAOA,IAAI,KAAK,MAAT,GAAkB,GAAlB,GAAwB,GAA/B;AACD;AALH,KAbO,EAoBP;AACEH,MAAAA,GAAG,EAAE,OADP;AAEEC,MAAAA,KAAK,EAAE;AAFT,KApBO,CAVI;AAmCbG,IAAAA,MAAM,EAAE,IAnCK;AAoCbC,IAAAA,UAAU,EAAE;AACVC,MAAAA,aAAa,EAAE;AACbC,QAAAA,UAAU,EAAE;AACVzB,UAAAA,QAAQ,EAAE;AADA;AADC;AADL;AApCC,GAAf;AA4CA,sBACE;AACE,IAAA,KAAK,EAAE;AAAE0B,MAAAA,UAAU,EAAE,oBAAd;AAAoCC,MAAAA,OAAO,EAAE,EAA7C;AAAiDC,MAAAA,SAAS,EAAE;AAA5D,KADT;AAAA,2BAGE,QAAC,UAAD,OAAgBhB;AAAhB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApDD","sourcesContent":["import React from \"react\";\nimport { QueryTable } from \"sula\";\n\nconst remoteDataSource = {\n  url: \"https://randomuser.me/api\",\n  method: \"GET\",\n  convertParams({ params }) {\n    return {\n      results: params.pageSize,\n      ...params,\n    };\n  },\n  converter({ data }) {\n    return {\n      list: data.results.map((item, index) => {\n        return {\n          ...item,\n          id: `${index}`,\n          name: `${item.name.first} ${item.name.last}`,\n        };\n      }),\n      total: 100,\n    };\n  },\n};\n\nexport default () => {\n  const config = {\n    remoteDataSource,\n    layout: \"vertical\",\n    fields: [\n      {\n        name: \"name\",\n        label: \"姓名\",\n        field: \"input\",\n      },\n    ],\n    columns: [\n      {\n        key: \"id\",\n        title: \"ID\",\n      },\n      {\n        key: \"name\",\n        title: \"姓名\",\n      },\n      {\n        key: \"nat\",\n        title: \"国家\",\n      },\n      {\n        key: \"gender\",\n        title: \"性别\",\n        render: ({ text }) => {\n          return text === \"male\" ? \"男\" : \"女\";\n        },\n      },\n      {\n        key: \"email\",\n        title: \"邮箱\",\n      },\n    ],\n    rowKey: \"id\",\n    tableProps: {\n      initialPaging: {\n        pagination: {\n          pageSize: 5,\n        }\n      }\n    }\n  };\n  return (\n    <div\n      style={{ background: \"rgb(241, 242, 246)\", padding: 16, marginTop: 16 }}\n    >\n      <QueryTable {...config} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}